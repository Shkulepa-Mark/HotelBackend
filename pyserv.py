import asyncio
import websockets

connected_clients = set()

async def handler(ws):
    print("üîå –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è:", ws.remote_address)
    connected_clients.add(ws)
    try:
        async for msg in ws:
            print("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:", msg)
            await ws.send("‚úÖ –°–µ—Ä–≤–µ—Ä –ø–æ–ª—É—á–∏–ª: " + msg)
    except websockets.exceptions.ConnectionClosed:
        print("‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è:", ws.remote_address)
    finally:
        connected_clients.remove(ws)

async def main():
    print("üöÄ –°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É 8765...")
    async with websockets.serve(handler, "0.0.0.0", 8765):
        await asyncio.Future()  # keep running

asyncio.run(main())